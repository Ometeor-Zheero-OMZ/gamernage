version: "3.9"

services:
  mydb:
    build:
      context: .
      dockerfile: ./docker/postgresql/Dockerfile
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "secret"
    ports:
      - 5432:5432
    container_name: mydb
    volumes:
      - db-store:/var/lib/postgresql/data
      - ./logs:/var/log/postgresql:z
    networks:
      - app_net
    # Password
    env_file:
      - ./docker/postgresql/.env.db
    restart: on-failure:5

  # Rust
  myrust:
    build:
      context: .
      dockerfile: ./docker/rust/Dockerfile
    working_dir: /backend
    expose:
      - "8080"
    environment:
      - TZ=UTC
    volumes:
      # log
      - ./logs:/backend/log
      # Rust code
      - ./backend/src:/backend/src
      - ./backend/Cargo.lock:/backend/Cargo.lock
      - ./backend/Cargo.toml:/backend/Cargo.toml
    command: /backend/target/release/backend
    container_name: myrust
    networks:
      - app_net
    restart: on-failure:5

  # Next.js
  mynext:
    container_name: mynext
    build:
      context: .
      dockerfile: ./docker/nextjs/Dockerfile
    restart: on-failure:5
    volumes:
      - ./frontend/out:/frontend/out
    ports:
      - 3000:3000
    networks:
      - app_net

  # nginx
  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - myrust
    ports:
      - 80:80
    volumes:
      # What should be served by nginx
      # Rust code
      - ./backend/src:/backend/src
      - ./frontend/out:/frontend/out
      - ./backend/Cargo.lock:/backend/Cargo.lock
      - ./backend/Cargo.toml:/backend/Cargo.toml
      # log
      - ./logs:/var/log/nginx:z
      # nginx config
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    container_name: nginx
    networks:
      - app_net
    restart: on-failure:5

networks:
  app_net:
    driver: "bridge"
volumes:
  db-store:
